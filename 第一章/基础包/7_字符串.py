# 字符串的定义方法
"""
单引号定义法: name = 'ank'
双引号定义法: name = "ank"
三引号定义法: name = """  """ __ 支持换行操作 , 如果有变量接收则为字符串 , 没有变量接收则为注释
"""
name = """白日依山尽
          黄河入海流"""
print(name)
# 如果想定义的字符串本身就包含单引号或双引号 , 则可以使用不同得引号来包裹 , 或者使用转义符\来解除引用
test1 = "芜''湖"
test2 = '芜""湖'
test3 = '芜\'\'湖'
print(test3)

print('__________________字符串的拼接____________________')
# 字符串的拼接
str1_1 = '苟利国家生死以'
str1_2 = '岂因祸福避趋之'
print(str1_1 + ',' + str1_2)

# 字符串外的形式都无法直接通过+完成拼接
tel_1 = 18830
tel_2 = 771910
print(str(tel_1) + str(tel_2))

print('__________________字符串格式化____________________')
# 字符串格式化  % 表示要占位了

#  %s      字符串
#  %d      有符号十进制整数
#  %f      浮点数

#  %%      输出%号
#  %c      字符
#  %u      无符号十进制整数
#  %o      八进制整数
#  %x      十六进制整数(小写字母0x)
#  %X      十六进制整数(大写字母0X)
#  %e      科学计数法(小写的e)
#  %E      科学计数法(大写的E)
#  %g      %f和%e的简写
#  %G      %f和%E的简写

name = '生死以'
num = 1234567
message = "苟利国家%s" % name
print(message)
message = "苟利国家%s%d" % (name, num)
print(str(type(message)) + ',' + message)

# 传进来的变量会受到%后面的标识来变化自身的格式

name = '传智播客'
years = 2006
s_price = 19999.99
massage = '%s,成立于%d,股票价值%f元' % (name, years, s_price)
print(massage)

print('__________________字符串精度控制____________________')
"""
可以使用辅助符号'm.n'来控制数据的宽度和精度
%m.n类型


1. m 控制宽度 , 要求是数字 , 设置宽度小于数字自身时不生效
2. n 控制小数点精度 , 要求是数字 , 会进行小数的四舍五入
例如:
 %5d 将表示整的宽度控制在5位 , 例如数字11设置为5d会变成[空格][空格][空格]11 , 会用3个空格补齐宽度
 %5.2f 将宽度控制在5位并且将小数点精度设置为2 , 例如对11.345设置为%7.2f后会变成[空格][空格]11.34 , 两个空格补齐长度且小数部分四舍五入到两位
 %.2f 只限制小数精度
"""
print('%10.2f' % 11)  # [     11.00]
num1 = 11
num2 = 11.12345
print("数字11限制宽度5是:[%5d]" % num1)
print("数字11限制宽度1是:[%1d]" % num1)
print("数字11.12345限制精度为3是:[%.3f]" % num2)

print('__________________字符串格式化方法2   快速格式化____________________')
# 快速格式化字符串   语法 : f"内容{变量}"的格式来完成快速格式化
# 不控制精度 , 不理会类型 , 只是填入变量
tap_1 = '利国家生死'
tap_2 = '因祸福避趋'
print(f"苟{tap_1}以 , 岂{tap_2}之")


































